<project name="Java CoG Kit" default="compile" basedir=".">

  <property file="build.properties"/>

  <property name="pkcs11.jars" value="lib/jpkcs11.zip" />
  <property name="cog.dst.dir" value="${build.dir}/classes"/>

  <property name="resource"     value="pitcairn.mcs.anl.gov" />
  <property name="ftp.server"   value="dg0n1.mcs.anl.gov" />
  <property name="mds.cmd.line" 
           value="mds-alliance.ncsa.uiuc.edu 391 'o=globus,c=us'"/>

  <property name="ldapjdk.jar" value="src/org/globus/mds/gsi/netscape/ldapjdk-patched.jar"/>

  <path id="classpathrun">
    <fileset dir="lib">
     <include name="*.jar"/>
     <include name="*.zip"/>
    </fileset>
    <pathelement path="${cog.dst.dir}"/>
    <pathelement location="${ldapjdk.jar}"/>
  </path>

  <!-- ############### TARGETS ############ -->

  <!-- =================================================================== -->
  <!-- Initial setup targets                                               -->
  <!-- =================================================================== -->


  <target name="setup">
   <java classname = "org.globus.tools.ui.config.ConfigurationWizard"
         classpathref = "classpathrun"
         fork      = "yes" >
   </java>
  </target>


  <!-- might need to set: -Djava.library.path=$(BASE_DIR)/lib/ -->
   <target name="pkcsInit">
   <java classname = "org.globus.pkcs11.tools.PKCS11PrepareToken"
         classpathref = "classpathrun"
		 fork      = "no" >
	 <arg value="-debug"/>
	<arg line="-pin 1234"/>
   </java>
  </target>

  <!-- =================================================================== -->
  <!-- starting the proxy                                                  -->
  <!-- =================================================================== -->


  <target name="proxyInit">
   <java classname = "org.globus.tools.proxy.GridProxyInit"
         classpathref = "classpathrun"
		 fork      = "yes" >         
   </java>
  </target>

  <!-- =================================================================== -->
  <!-- Globus package targets                                              -->
  <!-- =================================================================== -->



 <target name="JavaGaraTest">
     <java classname="org.globus.gara.JavaGaraTest"
           classpathref="classpathrun"
           fork = "yes">
           <arg line="${resource}"/>
     </java>
  </target>

 <target name="JavaMDSTest1">
     <java classname="org.globus.mds.MDSTest1"
           classpathref="classpathrun"
           fork = "yes">
           <arg line="${mds.cmd.line}"/>
     </java>
  </target>

 <target name="JavaMDSTest2">
     <java classname="org.globus.mds.MDSTest2"
           classpathref="classpathrun"
           fork = "yes">
           <arg line="${cmd.line}"/>
     </java>
  </target>

 <target name="MultiGramTest">
     <java classname="org.globus.gram.MultiUserGramTest"
           classpathref="classpathrun"
           fork = "yes">
           <arg line="${resource} ${cmd.line}"/>
     </java>
  </target>

  <target name="GramTest1">
     <java classname="org.globus.gram.GramTest"
           classpathref="classpathrun"
           fork = "yes">
          <arg line="${resource}"/>
     </java>
  </target>

  <target name="GramTest3">
     <java classname="org.globus.gram.Gram15Test"
           classpathref="classpathrun"
           fork = "yes">
          <arg line="${resource}"/>
     </java>
  </target>

 <target name="UrlCopyTest">
     <java classname="org.globus.io.urlcopy.UrlCopyTest"
           classpathref="classpathrun"
           fork = "yes">
     </java>
  </target>

 <!-- might need put jndi jar in bootclasspath -->
 <target name="JndiTest">
     <java classname="org.globus.mds.gsi.JndiTest"
           classpathref="classpathrun"
           fork = "yes">
         <arg line="${cmd.line}"/>
     </java>
  </target>

  <target name="NetscapeTest">
     <java classname="org.globus.mds.gsi.NetscapeTest"
           classpathref="classpathrun"
           fork = "yes">
         <arg line="${cmd.line}"/>
     </java>
  </target>


 <target name="GlobusRun1">
     <java classname="org.globus.tools.GlobusRun"
           classpathref="classpathrun"
           fork = "yes">
         <arg line="-r ${resource} -o '&amp;(executable=/bin/env)(directory=/homes/gawor)(argument=-l)(environment=(MIS jarek))'"/>
     </java>
  </target>

 <target name="GlobusRun2">
     <java classname="org.globus.tools.GlobusRun"
           classpathref="classpathrun"
           fork = "yes">
         <arg line="-r ${resource} -file src/org/globus/tools/test.rsl -output-enable"/>
     </java>
  </target>

 <target name="GlobusRun3">
     <java classname="org.globus.tools.GlobusRun"
           classpathref="classpathrun"
           fork = "yes">
         <arg line="-r ${resource} -output-enable '&amp;(executable=/home/gawor/test/test.sh)(directory=/homes/gawor)(argument=-l)(environment=(MIS jarek))'"/>
     </java>
  </target>

 <target name="GlobusRun4">
     <java classname="org.globus.tools.GlobusRun"
           classpathref="classpathrun"
           fork = "yes">
         <arg line="-r ${resource}  -output-enable '&amp;(executable=/bin/ls)(directory=/homes/gawor)(argument=-l)(environment=(MIS jarek))'"/>
     </java>
  </target>

 <target name="GlobusRun5">
     <java classname="org.globus.tools.GlobusRun"
           classpathref="classpathrun"
           fork = "yes">
         <arg line="-file src/org/globus/tools/test2.rsl"/>
     </java>
  </target>

 <target name="GlobusUrlCopy">
     <java classname="org.globus.tools.GlobusUrlCopy"
           classpathref="classpathrun"
           fork = "yes">
         <arg line="ftp://charlie.iit.edu:21/lib/rld file:///urlcopytest.file"/>
     </java>
  </target>

 <target name="GridInfoSearch">
     <java classname="org.globus.tools.GridInfoSearch"
           classpathref="classpathrun"
           fork = "yes">
         <arg line="'(objectclass=GlobusServiceJobManager)' contact"/>
     </java>
  </target>


</project>
